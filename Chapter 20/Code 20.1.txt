public class chatterController {  
  // Replace clientId with the Consumer Key generated in Step 2.
   private final String clientId = Chatter_Custom_Setting__c.getInstance( 'Consumer Key' ).Value__c;
   // Replace clientSecret with the Consumer Secret generated in Step 2.
   private final String clientSecret =  Chatter_Custom_Setting__c.getInstance( 'Consumer Secret' ).Value__c;
   // Replace username with Source Org username
   private final String username = Chatter_Custom_Setting__c.getInstance( 'Username' ).Value__c;
   // Replace password with Source Org password
   private final String password = Chatter_Custom_Setting__c.getInstance( 'Password' ).Value__c;
   
    public string feed {get; set;}
    public static string feed1 {get; set;}
    public string userId {get; set;}
    public static string conid {get; set;}
    public list<contact> conli {get; set;}
    public static list<string> feedList {get; set;}


// Constructor has the logic to display the Feeds of loggedin user

public chatterController(){
   
           String accessToken;
           accessToken = ReturnAccessToken();
           system.debug('access token---------------- '+accessToken); 
               if(accessToken != null){
               String endPoint = 'https://c.ap4.visual.force.com/services/data/v43.0/chatter/feeds/user-profile/me/feed-elements';
               Http h2 = new Http();
               HttpRequest req1 = new HttpRequest();
               req1.setHeader('Authorization','Bearer ' + accessToken);
               req1.setHeader('Content-Type','application/json');
               req1.setHeader('accept','application/json');           
               req1.setMethod('GET');          
               req1.setEndpoint(endPoint);          
               HttpResponse hs1 = h2.send(req1);
               system.debug('body---------- '+hs1.getBody());   
               
            string jsonstr = ('['+hs1.getbody()+']');
            system.debug('body is--->'+hs1);
            system.debug('feed ------- '+ feed1 );
            system.debug(hs1.getbody() );
            system.debug(jsonstr);
            
     
          list<Deserialize> deserializedbodies = (list<Deserialize>)JSON.deserialize(jsonstr , list<Deserialize>.class);        
          system.debug('deserializedbodies ---------- ' +deserializedbodies );
          feedList= new list<string>();
          
          for(Deserialize deser :deserializedbodies  ){         
            for(elements ele :deser.elements){
                if(ele.body.text != null){
                  feedList.add(ele.body.text); 
                   }              
                }
                system.debug('feedList--------------- '+ feedList);
              } 
          
                            
       }
}

//Method to post feed element
                public void postFeed(){                                                            
                   system.debug('--feed---'+feed1);
                   String accessToken;
                   accessToken = ReturnAccessToken();
                   system.debug('access token---------------- '+accessToken); 
     
                         system.debug('feed1--- '+feed1);
                           if(accessToken != null){
                            HttpRequest req= new HttpRequest();
                            Http http = new Http(); 
                          
                               string endpt ='https://c.ap4.visual.force.com/services/data/v43.0/chatter/feed-elements?feedElementType=FeedItem&subjectId=me+&text='+feed1;
                            req.setMethod('POST');                           
                            req.setEndpoint(endpt);                           
                            req.setHeader('Authorization','Bearer ' + accessToken);
                            req.setHeader('Content-Type', 'application/x-www-form-urlencoded');
                            
                            HttpResponse hs1 = http.send(req);
                            system.debug(hs1.getbody());
                           }
                          
                        
                         
                  } 
                
                




  
  //wrapper class to deserialize Access Token
  public class deserializeResponse
   {
      public String id;
      public String access_token;
   }
   
   // method to get the Access Token using OAuth
  public string ReturnAccessToken ()
   {
    
     system.debug('client_id= '+clientId);
     system.debug('username= '+username);
     system.debug('clientSecret= '+clientSecret);
     system.debug('password= '+password);
      String reqbody = 'grant_type=password&client_id='+clientId+'&client_secret='+clientSecret+'&username='+username+'&password='+password;
      system.debug('reqbody- '+reqbody);
      Http h = new Http();
      HttpRequest req = new HttpRequest();
      req.setBody(reqbody);
      req.setMethod('POST');
      req.setEndpoint('https://login.salesforce.com/services/oauth2/token');
      HttpResponse res = h.send(req);
      system.debug('res---------- '+res);
     deserializeResponse resp1 = (deserializeResponse)JSON.deserialize(res.getbody(),deserializeResponse.class);
     system.debug('access token'+resp1 );   
     return resp1.access_token;
     
     }
    
 
 // Wrapper class to parse the response received after hitting the url and fetch the feeds only
  public class Deserialize{
               
               public string currentPageUrl;
               public list<elements> elements;
           
           }
           
           public class elements {
                   
                       public string visibility{get;set;}
                       public body body{get;set;}
             
           }
           
           public class body{
               
               public boolean isRichText{get;set;}
               public string text{get;set;}
           
           }
   
}