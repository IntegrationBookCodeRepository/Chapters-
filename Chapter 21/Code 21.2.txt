public class SendContactUsingRESTAPI {
  private final String clientId = SFDC_Custom_Setting__c.getInstance( 'ClientId' ).Value__c;
  private final String clientSecret = SFDC_Custom_Setting__c.getInstance( 'ClientSecret' ).Value__c;
  private final String username = SFDC_Custom_Setting__c.getInstance( 'Username' ).Value__c;
  private final String password = SFDC_Custom_Setting__c.getInstance( 'Password' ).Value__c;
 
 //wrapper class to deserialize Access Token
 public class deserializeResponse
  {
     public String id;
     public String access_token;
  }
  
  // method to get the Access Token using OAuth
 public String ReturnAccessToken (SendContactUsingRESTAPI acount)
  {
     String reqbody = 'grant_type=password&client_id='+clientId+'&client_secret='+clientSecret+'&username='+username+'&password='+password;
     Http h = new Http();
     HttpRequest req = new HttpRequest();
     req.setBody(reqbody);
     req.setMethod('POST');
     req.setEndpoint('https://login.salesforce.com/services/oauth2/token');
     HttpResponse res = h.send(req);
    deserializeResponse resp1 = (deserializeResponse)JSON.deserialize(res.getbody(),deserializeResponse.class);
    system.debug('access token'+resp1 );   
    return resp1.access_token;
  }
   // method to pass the contact ID of a Source Org and get the related cases using Access Token 
  public static void callgetCase (String conId)
  {
          SendContactUsingRESTAPI cont1 = new SendContactUsingRESTAPI();
          String accessToken;
          accessToken = cont1.ReturnAccessToken (cont1);
          system.debug('access token---------------- '+accessToken);                      
              if(accessToken != null){
              String endPoint = 'https://ap5.salesforce.com/services/apexrest/v1/getCase/' +conId;
              Http h2 = new Http();
              HttpRequest req1 = new HttpRequest();
              req1.setHeader('Authorization','Bearer ' + accessToken);
              req1.setHeader('Content-Type','application/json');
              req1.setHeader('accept','application/json');           
              req1.setMethod('GET');          
              req1.setEndpoint(endPoint);          
              HttpResponse res1 = h2.send(req1);
              system.debug('body---------- '+res1.getBody());
              JSONParser parser = JSON.createParser(res1.getBody());
               set<Case> caseSet=new set<Case>(); 
               
             while (parser.nextToken() != null) {               
               
             if((parser.getCurrentToken() == JSONToken.FIELD_NAME) ){
                   case cas;
               // now parse the response and insert the cases in Destination org               
               
               
               if((parser.getCurrentToken() == JSONToken.FIELD_NAME) ){
                   Contact cont;
                   if ((parser.getCurrentToken() == JSONToken.FIELD_NAME) && (parser.getText() == 'Id')) {
                   // Get the value.
                   parser.nextToken();
                   
                   string cId = parser.getText();
                   cas=new case();
                   cas.Id=cId;
                   system.debug('Id--- ' + cId);
                   
                   parser.nextToken();
                   if ((parser.getCurrentToken() == JSONToken.FIELD_NAME) &&
                       (parser.getText() == 'Subject')) {
                       // Get the value.
                       parser.nextToken();                   
                       string sub= parser.getText();
                       cas.subject=sub;
                       system.debug('Subject--- ' + sub );
                   }
                   
                   
                   parser.nextToken();
                   if ((parser.getCurrentToken() == JSONToken.FIELD_NAME) &&
                       (parser.getText() == 'Status')) {
                       // Get the value.
                       parser.nextToken();                   
                       string status = parser.getText();
                       cas.status=status;
                       system.debug('status--- ' + status);
                   }
                   
                   parser.nextToken();
                   if ((parser.getCurrentToken() == JSONToken.FIELD_NAME) &&
                       (parser.getText() == 'priority')) {
                       // Get the value.
                       parser.nextToken();                   
                       string priority = parser.getText();
                       cas.priority=priority;
                       system.debug('priority--- ' + priority);
                   }
                   
               
               }
               caseSet.add(cas); 
               }
                caseSet.remove(null);
                                      
           }
               
                 
              }
              // this list will be initialized with the case records containing in caseSet
  
              list<case> caseList =  new list<case>();
              for(case cas :caseSet){
              case newcase = new case();
               newcase.subject = cas.subject;
               newcase.status =  cas.status;
               newcase.priority = cas.priority;
               caseList.add(newcase);
              }
              insert caseList;
              // check newly inserted case's id in Destination Org
              system.debug('caseSet--------- '+caseList);    
    
       }
    
  }
  
}
